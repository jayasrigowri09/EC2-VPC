

AWSTemplateFormatVersion: '2010-09-09'
Description: Create Ec2 Machine 

Parameters:
  MyVpcBlock:
    Type: String
    Default: 10.0.0.0/16
    Description: VPC CIDR 

  KeyName:
    Type: AWS::EC2::KeyPair::KeyName

  Subnet1Block:
    Type: String
    Default: 10.0.1.0/24
    Description: CidrBlock for Subnet 1 within the VPC.      
      
  InstanceType:
    Description: WebServer EC2 instance type
    Type: String
    Default: t2.micro
    AllowedValues:
    - t2.micro
    - t2.small
    - t2.nano

  MyAvailabilityZone:
    Description: Select the AZ
    Type: String
    Default: ap-south-1
   

  AMI:
    Type: String
    Default: ami-01a4f99c4ac11b03c
    Description: The Amazon Linux AMI to use.

Resources:
 

  MyEC2Instance:
    Type: AWS::EC2::Instance
    Properties:
      ImageID: !Ref AMI
      InstanceID: !Ref InstanceType
      KeyName: !Ref KeyName
      Securitygroups: !Ref SecurityGroup
        
      AvailabilityZone: !Ref MyAvailabilityZone
      SubnetId: !Ref Subnet1
      VPCID: !Ref MYVPC

  MYVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref MyVpcBlock
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-MYVPC"

  Subnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref MYVPC
      CidrBlock: !Ref Subnet1Block 
      Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-Subnet1"    
      AvailabilityZone: 
        Fn::Select:
          - '0'
          - Fn::GetAZs:
              Ref: AWS::Region

    
  RouteTable:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref MYVPC               
      Tags: 
        - Key: Name
          Value: Public Subnets
        - Key: Network
          Value: Public   

  Subnet1RouteTableAssociation:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref Subnet1
      RouteTableId: !Ref RouteTable

  InternetGateway:
    Type: AWS::EC2::InternetGateway

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      InternetGatewayId: !Ref InternetGateway
      VpcId: !Ref MYVPC   

  Route: 
    DependsOn: VPCGatewayAttachment
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTable  
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway 

  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      Description: Allow http and ssh connection to the instance
      SecurityGroupIngress:
      - IpProtocol: tcp
        FromPort: 80
        ToPort: 80
        CidrIp: 0.0.0.0/0
      - IpProtocol: tcp
        FromPort: 22
        ToPort: 22
        Cidr: 0.0.0.0/0
  

      Tags:
      - Key: Name
        Name: DemoEc2-Instance

    
    
